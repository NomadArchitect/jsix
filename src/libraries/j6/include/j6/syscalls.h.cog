#pragma once
// vim: ft=cpp

#include <j6/types.h>

#ifdef __cplusplus
extern "C" {
#endif

/*[[[cog code generation
from definitions.context import Context

ctx = Context(definitions_path)
ctx.parse("syscalls.def")
syscalls = ctx.interfaces["syscalls"]

for id, scope, method in syscalls.methods:
    if scope:
        name = f"{scope.name}_{method.name}"
    else:
        name = method.name

    args = []
    if method.constructor:
        args.append("j6_handle_t *handle")
    elif not method.static:
        args.append("j6_handle_t handle")

    for param in method.params:
        for type, suffix in param.type.c_names(param.options):
            args.append(f"{type} {param.name}{suffix}")

    cog.outl(f"""j6_status_t j6_{name} ({", ".join(args)});""")
]]]*/
/// [[[end]]]

#ifdef __cplusplus
}
#endif
